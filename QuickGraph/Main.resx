<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIAsAAAEACAC0BQAAFgAAACgAAAAgAAAAFgAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABiOjwAZDs9AGY9PwBoPkAAaT9CAGtAQwBsQUQAb0RHAIJNUACEVFcAjlhaAI5YWwCQWFsAjFlcAI5Z
        XACQWl0Aj19hAIRoaQCJaWsAmWlsAJhqbACMa20Ao2ptAJZucACZcXMAlHJ1AKRxcwCTc3UAl3R2AKVz
        dQCwcnUAmnV3AK91eACudnkAtHd6AKB6fQCueXwAsHt+ALF+gQC2gIMAn4OEALuGiACmiIoAoImKALeI
        igCsiosAwIiLAMSIiwCri4wAxImMALqKjQC+iowAtYuMALWMjQC8jI8AvY2QAMWOkQCtkZIAv5CSAK6U
        lgC8lJYAyZOWAL+WmAC+mpwAuJ2fANOcnwDUnqEAwqGjANagowC7o6UAvKSmAMKkpQDOo6YA1aOmANqj
        pgDJpacAzKWmAL2mqADBp6gA2aapANmnqgDaqKsA16msAMGtrgDbrK8A3KyvANytsADGsLEA0a+xAOGu
        sQDbr7EAxbGyAM2xsgDbsLMAw7S1AOOytQDEtbYAw7a2ANi0tgDFtrYAxba3AMa3twDJt7cA1bi5ANe4
        uQDit7kA4be6AOC4uwDcubsA1Lu7AOi6vADLvr4A4b7BAM/AwQDhwMIA4sDDANTCwwDYwsIA5MHCANjC
        wwDZwsQA4MPFAOHExgDkxMYA6cTFAOXGyQDkx8kA28jJAOHJywDZyssA48rMAOTLzADZzc4A5M3OAObN
        zwDizs8A5M/QAOTQ0QDm0NIA59HSAOjS0gDo0tMA7dLUAObT1ADo09QA49TVAOvU1QDm1dUA6NfYAOvX
        2ADi2dkA5NnZAN3b2wDk29wA3tzcAODd3QDh3d0A7NzdAOfd3QDq3d0A6N3eAOLe3gDn3t4A6N7eAODf
        3wDk4OAA7eDgAOXh4QDt4eEA6uLiAOrj4wDr4+MA7eXlAO3m5gDs5+cA7efoAOro6ADt6OcA7OjoAO/o
        6ADq6egA8erqAPLq6gD16uoA9OrrAO/r6wDx6+sA8uvrAPPr6wD06+sA9uvrAPPs7ADt7e0A8+3tAPft
        7QD07u4A9e7uAPXv7wDw8PAA8/DwAPbw8AD38PAA+PDwAPfx8QD58fEA+fLyAPrz8wD19PQA+PTzAPr0
        9AD49PUA+/T0APn09QD19fUA9/X1APn19QD59fYA9/b2APn29gD59/cA+vf3AP339wD8+PgA/vn5APr6
        +gD7+voA/vr6AP77+wD/+/sA/Pz8AP38/AD+/PwA//z8AP39/QD+/f0A//39AP79/gD+/v4A//7+AP//
        /wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAGxwfIy1Oue/v7+p/SzYnKUiA7+/vnXDc7+/v5Y6S5u8HKFNNMBMMdO/t1yYybZ6jZz1o7++N
        Vtfv7+l2fNbv7wZl7+/v5UAKhLGpga21vL/IiTGo45BV2O/ve2696+7vBWDv2bCctBgUrquzusHDxMmT
        L4jOg1HC03Jfpuvo6+4EYMaam6GnRg+Z6u/v7+/HeC444O+LT2yGWZXf4+jr7gNjpJqboaVbDqzv71ws
        IB4iTLvv74pQUkqM4t/j6OvuAl7AmJuhp0ULluE/IT53q+/v7+7qhUS4Wl3R3+Po6+8BXu/Pm6GwFxCy
        oh00usXIyMjJysx6Qr7KVGvn5O7v7wBh7+/v1TkIcaqiGjW7trbEy4fNzHlBt93QanPm7+/vACtvZDsJ
        DVfv6dtHFkOXoHU6M+PegknU7+/SaX7v7+8REhUZKmav7+/v7++RPCQlN1if7++UYtrv7+/XfY/s7wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>